const Map = require('ti.map');
var items = require('./interviste.json');
var createDettaglio = require('./intervista').createWindow;

var win = Ti.UI.createWindow();

const map = Map.createView({
  mapType: Map.SATELLITE_TYPE,
  region: getRegion(items),
  animate: true,
  regionFit: true,
  userLocation: true,
  annotations: createPins() });

map.addEventListener('click', function (event) {
  var s = event.clicksource;
  if (s == 'infoWindow' || s == 'title' || s == 'subtitle') {
    createDettaglio(items[event.annotation.index]);
  }
});
win.add(map);

function createPins() {
  var annotations = [];
  for (var i = 0; i < items.length; i++) {
    var item = items[i];

    annotations[i] = Map.createAnnotation({
      latitude: item.coordinate[0],
      longitude: item.coordinate[1],
      title: item.titolo,
      subtitle: item.intervistato,
      pincolor: Map.ANNOTATION_RED,
      index: i });

  }
  return annotations;
}

function getRegion(items) {
  var maxCoords = [-10000, -10000];
  var minCoords = [10000, 10000];
  for (var i = 0; i < items.length; i++) {
    var item = items[i];
    if (item.coordinate[0] > maxCoords[0]) {
      maxCoords[0] = item.coordinate[0];
    }
    if (item.coordinate[0] < minCoords[0]) {
      minCoords[0] = item.coordinate[0];
    }
    if (item.coordinate[1] > maxCoords[1]) {
      maxCoords[1] = item.coordinate[1];
    }
    if (item.coordinate[1] < minCoords[1]) {
      minCoords[1] = item.coordinate[1];
    }
  }
  return {
    latitude: (maxCoords[0] - minCoords[0]) / 2 + minCoords[0],
    longitude: (maxCoords[1] - minCoords[1]) / 2 + minCoords[1],
    latitudeDelta: Math.max((maxCoords[0] - minCoords[0]) * 2, 0.01),
    longitudeDelta: Math.max((maxCoords[1] - minCoords[1]) * 2, 0.01) };

}

exports.window = win;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcHBhLmpzIl0sIm5hbWVzIjpbIk1hcCIsInJlcXVpcmUiLCJpdGVtcyIsImNyZWF0ZURldHRhZ2xpbyIsImNyZWF0ZVdpbmRvdyIsIndpbiIsIlRpIiwiVUkiLCJtYXAiLCJjcmVhdGVWaWV3IiwibWFwVHlwZSIsIlNBVEVMTElURV9UWVBFIiwicmVnaW9uIiwiZ2V0UmVnaW9uIiwiYW5pbWF0ZSIsInJlZ2lvbkZpdCIsInVzZXJMb2NhdGlvbiIsImFubm90YXRpb25zIiwiY3JlYXRlUGlucyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInMiLCJjbGlja3NvdXJjZSIsImFubm90YXRpb24iLCJpbmRleCIsImFkZCIsImkiLCJsZW5ndGgiLCJpdGVtIiwiY3JlYXRlQW5ub3RhdGlvbiIsImxhdGl0dWRlIiwiY29vcmRpbmF0ZSIsImxvbmdpdHVkZSIsInRpdGxlIiwidGl0b2xvIiwic3VidGl0bGUiLCJpbnRlcnZpc3RhdG8iLCJwaW5jb2xvciIsIkFOTk9UQVRJT05fUkVEIiwibWF4Q29vcmRzIiwibWluQ29vcmRzIiwibGF0aXR1ZGVEZWx0YSIsIk1hdGgiLCJtYXgiLCJsb25naXR1ZGVEZWx0YSIsImV4cG9ydHMiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBbkI7QUFDQSxJQUFJQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxtQkFBRCxDQUFuQjtBQUNBLElBQUlFLGVBQWUsR0FBR0YsT0FBTyxDQUFDLGNBQUQsQ0FBUCxDQUF3QkcsWUFBOUM7O0FBRUEsSUFBSUMsR0FBRyxHQUFHQyxFQUFFLENBQUNDLEVBQUgsQ0FBTUgsWUFBTixFQUFWOztBQUVBLE1BQU1JLEdBQUcsR0FBR1IsR0FBRyxDQUFDUyxVQUFKLENBQWU7QUFDekJDLEVBQUFBLE9BQU8sRUFBRVYsR0FBRyxDQUFDVyxjQURZO0FBRXpCQyxFQUFBQSxNQUFNLEVBQUVDLFNBQVMsQ0FBQ1gsS0FBRCxDQUZRO0FBR3pCWSxFQUFBQSxPQUFPLEVBQUUsSUFIZ0I7QUFJekJDLEVBQUFBLFNBQVMsRUFBRSxJQUpjO0FBS3pCQyxFQUFBQSxZQUFZLEVBQUUsSUFMVztBQU16QkMsRUFBQUEsV0FBVyxFQUFFQyxVQUFVLEVBTkUsRUFBZixDQUFaOztBQVFBVixHQUFHLENBQUNXLGdCQUFKLENBQXFCLE9BQXJCLEVBQThCLFVBQVNDLEtBQVQsRUFBZ0I7QUFDNUMsTUFBSUMsQ0FBQyxHQUFHRCxLQUFLLENBQUNFLFdBQWQ7QUFDQSxNQUFHRCxDQUFDLElBQUksWUFBTCxJQUFxQkEsQ0FBQyxJQUFJLE9BQTFCLElBQXFDQSxDQUFDLElBQUksVUFBN0MsRUFBeUQ7QUFDdkRsQixJQUFBQSxlQUFlLENBQUNELEtBQUssQ0FBQ2tCLEtBQUssQ0FBQ0csVUFBTixDQUFpQkMsS0FBbEIsQ0FBTixDQUFmO0FBQ0Q7QUFDRixDQUxEO0FBTUFuQixHQUFHLENBQUNvQixHQUFKLENBQVFqQixHQUFSOztBQUVBLFNBQVNVLFVBQVQsR0FBc0I7QUFDcEIsTUFBSUQsV0FBVyxHQUFHLEVBQWxCO0FBQ0EsT0FBSSxJQUFJUyxDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLEdBQUN4QixLQUFLLENBQUN5QixNQUF2QixFQUErQkQsQ0FBQyxFQUFoQyxFQUFvQztBQUNsQyxRQUFJRSxJQUFJLEdBQUcxQixLQUFLLENBQUN3QixDQUFELENBQWhCOztBQUVBVCxJQUFBQSxXQUFXLENBQUNTLENBQUQsQ0FBWCxHQUFpQjFCLEdBQUcsQ0FBQzZCLGdCQUFKLENBQXFCO0FBQ3BDQyxNQUFBQSxRQUFRLEVBQUVGLElBQUksQ0FBQ0csVUFBTCxDQUFnQixDQUFoQixDQUQwQjtBQUVwQ0MsTUFBQUEsU0FBUyxFQUFFSixJQUFJLENBQUNHLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FGeUI7QUFHcENFLE1BQUFBLEtBQUssRUFBRUwsSUFBSSxDQUFDTSxNQUh3QjtBQUlwQ0MsTUFBQUEsUUFBUSxFQUFFUCxJQUFJLENBQUNRLFlBSnFCO0FBS3BDQyxNQUFBQSxRQUFRLEVBQUVyQyxHQUFHLENBQUNzQyxjQUxzQjtBQU1wQ2QsTUFBQUEsS0FBSyxFQUFFRSxDQU42QixFQUFyQixDQUFqQjs7QUFRRDtBQUNELFNBQU9ULFdBQVA7QUFDRDs7QUFFRCxTQUFTSixTQUFULENBQW9CWCxLQUFwQixFQUEyQjtBQUN6QixNQUFJcUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxLQUFGLEVBQVMsQ0FBQyxLQUFWLENBQWhCO0FBQ0EsTUFBSUMsU0FBUyxHQUFHLENBQUMsS0FBRCxFQUFRLEtBQVIsQ0FBaEI7QUFDQSxPQUFLLElBQUlkLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUN4QixLQUFLLENBQUN5QixNQUF4QixFQUFnQ0QsQ0FBQyxFQUFqQyxFQUFxQztBQUNuQyxRQUFJRSxJQUFJLEdBQUcxQixLQUFLLENBQUN3QixDQUFELENBQWhCO0FBQ0EsUUFBR0UsSUFBSSxDQUFDRyxVQUFMLENBQWdCLENBQWhCLElBQXFCUSxTQUFTLENBQUMsQ0FBRCxDQUFqQyxFQUFzQztBQUNwQ0EsTUFBQUEsU0FBUyxDQUFDLENBQUQsQ0FBVCxHQUFlWCxJQUFJLENBQUNHLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBZjtBQUNEO0FBQ0QsUUFBR0gsSUFBSSxDQUFDRyxVQUFMLENBQWdCLENBQWhCLElBQXFCUyxTQUFTLENBQUMsQ0FBRCxDQUFqQyxFQUFzQztBQUNwQ0EsTUFBQUEsU0FBUyxDQUFDLENBQUQsQ0FBVCxHQUFlWixJQUFJLENBQUNHLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBZjtBQUNEO0FBQ0QsUUFBR0gsSUFBSSxDQUFDRyxVQUFMLENBQWdCLENBQWhCLElBQXFCUSxTQUFTLENBQUMsQ0FBRCxDQUFqQyxFQUFzQztBQUNwQ0EsTUFBQUEsU0FBUyxDQUFDLENBQUQsQ0FBVCxHQUFlWCxJQUFJLENBQUNHLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBZjtBQUNEO0FBQ0QsUUFBR0gsSUFBSSxDQUFDRyxVQUFMLENBQWdCLENBQWhCLElBQXFCUyxTQUFTLENBQUMsQ0FBRCxDQUFqQyxFQUFzQztBQUNwQ0EsTUFBQUEsU0FBUyxDQUFDLENBQUQsQ0FBVCxHQUFlWixJQUFJLENBQUNHLFVBQUwsQ0FBZ0IsQ0FBaEIsQ0FBZjtBQUNEO0FBQ0Y7QUFDRCxTQUFPO0FBQ0xELElBQUFBLFFBQVEsRUFBRSxDQUFDUyxTQUFTLENBQUMsQ0FBRCxDQUFULEdBQWVDLFNBQVMsQ0FBQyxDQUFELENBQXpCLElBQWdDLENBQWhDLEdBQW9DQSxTQUFTLENBQUMsQ0FBRCxDQURsRDtBQUVMUixJQUFBQSxTQUFTLEVBQUUsQ0FBQ08sU0FBUyxDQUFDLENBQUQsQ0FBVCxHQUFlQyxTQUFTLENBQUMsQ0FBRCxDQUF6QixJQUFnQyxDQUFoQyxHQUFvQ0EsU0FBUyxDQUFDLENBQUQsQ0FGbkQ7QUFHTEMsSUFBQUEsYUFBYSxFQUFFQyxJQUFJLENBQUNDLEdBQUwsQ0FBUyxDQUFDSixTQUFTLENBQUMsQ0FBRCxDQUFULEdBQWVDLFNBQVMsQ0FBQyxDQUFELENBQXpCLElBQWdDLENBQXpDLEVBQTRDLElBQTVDLENBSFY7QUFJTEksSUFBQUEsY0FBYyxFQUFFRixJQUFJLENBQUNDLEdBQUwsQ0FBUyxDQUFDSixTQUFTLENBQUMsQ0FBRCxDQUFULEdBQWVDLFNBQVMsQ0FBQyxDQUFELENBQXpCLElBQWdDLENBQXpDLEVBQTRDLElBQTVDLENBSlgsRUFBUDs7QUFNRDs7QUFFREssT0FBTyxDQUFDQyxNQUFSLEdBQWlCekMsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNYXAgPSByZXF1aXJlKCd0aS5tYXAnKTtcbnZhciBpdGVtcyA9IHJlcXVpcmUoJy4vaW50ZXJ2aXN0ZS5qc29uJyk7XG52YXIgY3JlYXRlRGV0dGFnbGlvID0gcmVxdWlyZSgnLi9pbnRlcnZpc3RhJykuY3JlYXRlV2luZG93O1xuXG52YXIgd2luID0gVGkuVUkuY3JlYXRlV2luZG93KCk7XG5cbmNvbnN0IG1hcCA9IE1hcC5jcmVhdGVWaWV3KHtcbiAgbWFwVHlwZTogTWFwLlNBVEVMTElURV9UWVBFLFxuICByZWdpb246IGdldFJlZ2lvbihpdGVtcyksXG4gIGFuaW1hdGU6IHRydWUsXG4gIHJlZ2lvbkZpdDogdHJ1ZSxcbiAgdXNlckxvY2F0aW9uOiB0cnVlLFxuICBhbm5vdGF0aW9uczogY3JlYXRlUGlucygpXG59KTtcbm1hcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gIHZhciBzID0gZXZlbnQuY2xpY2tzb3VyY2U7XG4gIGlmKHMgPT0gJ2luZm9XaW5kb3cnIHx8IHMgPT0gJ3RpdGxlJyB8fCBzID09ICdzdWJ0aXRsZScpIHtcbiAgICBjcmVhdGVEZXR0YWdsaW8oaXRlbXNbZXZlbnQuYW5ub3RhdGlvbi5pbmRleF0pO1xuICB9XG59KTtcbndpbi5hZGQobWFwKTtcblxuZnVuY3Rpb24gY3JlYXRlUGlucygpIHtcbiAgdmFyIGFubm90YXRpb25zID0gW107XG4gIGZvcih2YXIgaSA9IDA7IGk8aXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGl0ZW1zW2ldO1xuXG4gICAgYW5ub3RhdGlvbnNbaV0gPSBNYXAuY3JlYXRlQW5ub3RhdGlvbih7XG4gICAgICBsYXRpdHVkZTogaXRlbS5jb29yZGluYXRlWzBdLFxuICAgICAgbG9uZ2l0dWRlOiBpdGVtLmNvb3JkaW5hdGVbMV0sXG4gICAgICB0aXRsZTogaXRlbS50aXRvbG8sXG4gICAgICBzdWJ0aXRsZTogaXRlbS5pbnRlcnZpc3RhdG8sXG4gICAgICBwaW5jb2xvcjogTWFwLkFOTk9UQVRJT05fUkVELFxuICAgICAgaW5kZXg6IGlcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gYW5ub3RhdGlvbnM7XG59XG5cbmZ1bmN0aW9uIGdldFJlZ2lvbiAoaXRlbXMpIHtcbiAgdmFyIG1heENvb3JkcyA9IFstMTAwMDAsIC0xMDAwMF07XG4gIHZhciBtaW5Db29yZHMgPSBbMTAwMDAsIDEwMDAwXVxuICBmb3IgKHZhciBpID0gMDsgaTxpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gaXRlbXNbaV07XG4gICAgaWYoaXRlbS5jb29yZGluYXRlWzBdID4gbWF4Q29vcmRzWzBdKSB7XG4gICAgICBtYXhDb29yZHNbMF0gPSBpdGVtLmNvb3JkaW5hdGVbMF1cbiAgICB9XG4gICAgaWYoaXRlbS5jb29yZGluYXRlWzBdIDwgbWluQ29vcmRzWzBdKSB7XG4gICAgICBtaW5Db29yZHNbMF0gPSBpdGVtLmNvb3JkaW5hdGVbMF1cbiAgICB9XG4gICAgaWYoaXRlbS5jb29yZGluYXRlWzFdID4gbWF4Q29vcmRzWzFdKSB7XG4gICAgICBtYXhDb29yZHNbMV0gPSBpdGVtLmNvb3JkaW5hdGVbMV1cbiAgICB9XG4gICAgaWYoaXRlbS5jb29yZGluYXRlWzFdIDwgbWluQ29vcmRzWzFdKSB7XG4gICAgICBtaW5Db29yZHNbMV0gPSBpdGVtLmNvb3JkaW5hdGVbMV1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBsYXRpdHVkZTogKG1heENvb3Jkc1swXSAtIG1pbkNvb3Jkc1swXSkgLyAyICsgbWluQ29vcmRzWzBdLFxuICAgIGxvbmdpdHVkZTogKG1heENvb3Jkc1sxXSAtIG1pbkNvb3Jkc1sxXSkgLyAyICsgbWluQ29vcmRzWzFdLFxuICAgIGxhdGl0dWRlRGVsdGE6IE1hdGgubWF4KChtYXhDb29yZHNbMF0gLSBtaW5Db29yZHNbMF0pICogMiwgMC4wMSksXG4gICAgbG9uZ2l0dWRlRGVsdGE6IE1hdGgubWF4KChtYXhDb29yZHNbMV0gLSBtaW5Db29yZHNbMV0pICogMiwgMC4wMSksXG4gIH07XG59XG5cbmV4cG9ydHMud2luZG93ID0gd2luOyJdLCJzb3VyY2VSb290IjoiL1VzZXJzL2x1aWdpdml0ZWxsaS90aXRhbml1bS1wcm9qL1Bpc3RpY2NpRXhwZXJpZW5jZS9SZXNvdXJjZXMifQ==
